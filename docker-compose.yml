version: "3.8"

services:
  backend:
    build:
      context: ./SpringDataRest
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/voitureDB
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - "SPRINGPROFILES=prod,actuator"
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build:
      context: ./front_end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
    volumes:
      - ./front_end:/app
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - app-network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=voitureDB
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./SpringDataRest/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "4000:3000"
    restart: unless-stopped
    volumes:
      - ./SpringDataRest/monitoring/grafana/provisioning/datasources/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    networks:
      - app-network
volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
